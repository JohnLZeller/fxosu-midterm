diff --git a/b2g/installer/package-manifest.in b/b2g/installer/package-manifest.in
--- a/b2g/installer/package-manifest.in
+++ b/b2g/installer/package-manifest.in
@@ -375,16 +375,18 @@
 @RESPATH@/components/ConsoleAPI.manifest
 @RESPATH@/components/ConsoleAPIStorage.js
 @RESPATH@/components/BrowserElementParent.manifest
 @RESPATH@/components/BrowserElementParent.js
 @RESPATH@/components/ContactManager.js
 @RESPATH@/components/ContactManager.manifest
 @RESPATH@/components/PhoneNumberService.js
 @RESPATH@/components/PhoneNumberService.manifest
+@RESPATH@/components/FxOSUPrototypeService.js
+@RESPATH@/components/FxOSUPrototypeService.manifest
 @RESPATH@/components/NotificationStorage.js
 @RESPATH@/components/NotificationStorage.manifest
 @RESPATH@/components/PermissionSettings.js
 @RESPATH@/components/PermissionSettings.manifest
 @RESPATH@/components/PermissionPromptService.js
 @RESPATH@/components/PermissionPromptService.manifest
 @RESPATH@/components/AlarmsManager.js
 @RESPATH@/components/AlarmsManager.manifest
diff --git a/browser/installer/package-manifest.in b/browser/installer/package-manifest.in
--- a/browser/installer/package-manifest.in
+++ b/browser/installer/package-manifest.in
@@ -544,16 +544,18 @@
 @RESPATH@/components/RequestSyncScheduler.js
 
 @RESPATH@/components/PermissionSettings.js
 @RESPATH@/components/PermissionSettings.manifest
 @RESPATH@/components/ContactManager.js
 @RESPATH@/components/ContactManager.manifest
 @RESPATH@/components/PhoneNumberService.js
 @RESPATH@/components/PhoneNumberService.manifest
+@RESPATH@/components/FxOSUPrototypeService.js
+@RESPATH@/components/FxOSUPrototypeService.manifest
 @RESPATH@/components/NotificationStorage.js
 @RESPATH@/components/NotificationStorage.manifest
 @RESPATH@/components/AlarmsManager.js
 @RESPATH@/components/AlarmsManager.manifest
 @RESPATH@/components/Push.js
 @RESPATH@/components/Push.manifest
 @RESPATH@/components/PushServiceLauncher.js
 
diff --git a/dom/apps/PermissionsTable.jsm b/dom/apps/PermissionsTable.jsm
--- a/dom/apps/PermissionsTable.jsm
+++ b/dom/apps/PermissionsTable.jsm
@@ -210,16 +210,22 @@ this.PermissionsTable =  { geolocation: 
                              certified: ALLOW_ACTION
                            },
                            attention: {
                              app: DENY_ACTION,
                              trusted: DENY_ACTION,
                              privileged: DENY_ACTION,
                              certified: ALLOW_ACTION
                            },
+                           fxosuprototypeservice: {
+                             app: DENY_ACTION,
+                             trusted: DENY_ACTION,
+                             privileged: DENY_ACTION,
+                             certified: ALLOW_ACTION
+                           },
                            "global-clickthrough-overlay": {
                              app: DENY_ACTION,
                              trusted: DENY_ACTION,
                              privileged: ALLOW_ACTION,
                              certified: ALLOW_ACTION
                            },
                            "moz-attention": {
                              app: DENY_ACTION,
diff --git a/dom/fxosuprototype/FxOSUPrototypeService.js b/dom/fxosuprototype/FxOSUPrototypeService.js
new file mode 100644
--- /dev/null
+++ b/dom/fxosuprototype/FxOSUPrototypeService.js
@@ -0,0 +1,295 @@
+/* This Source Code Form is subject to the terms of the Mozilla Public
+ * License, v. 2.0. If a copy of the MPL was not distributed with this file,
+ * You can obtain one at http://mozilla.org/MPL/2.0/. */
+
+"use strict";
+
+const DEBUG = false;
+function debug(s) { dump("-*- FxOSUPrototypeService.js: " + s + "\n"); }
+
+const Cc = Components.classes;
+const Ci = Components.interfaces;
+const Cu = Components.utils;
+
+Cu.import("resource://gre/modules/XPCOMUtils.jsm");
+Cu.import("resource://gre/modules/Services.jsm");
+Cu.import("resource://gre/modules/DOMRequestHelper.jsm");
+//Cu.import("resource://gre/modules/Battery.jsm"); // Fails on Desktop
+
+XPCOMUtils.defineLazyServiceGetter(this, "cpmm",
+                                   "@mozilla.org/childprocessmessagemanager;1",
+                                   "nsIMessageSender");
+
+// Component interface import factory
+function importFactory(contractIdentification, interfaceName) {
+  try {
+    return Cc[contractIdentification].createInstance(interfaceName);
+  }
+  catch(err) {
+    try {
+      return Cc[contractIdentification].getService(interfaceName);
+    } catch(e) {
+      return null;
+    }
+  }
+}
+
+// Import components
+var networkLinkService = importFactory("@mozilla.org/network/network-link-service;1", Ci.nsINetworkLinkService);
+var networkStatsManager = importFactory("@mozilla.org/networkStatsManager;1", Ci.nsIDOMNetworkStatsManager);
+
+// FxOSUPrototypeService
+
+function FxOSUPrototypeService()
+{
+  if (DEBUG) debug("Constructor");
+}
+
+FxOSUPrototypeService.prototype = {
+  __proto__: DOMRequestIpcHelper.prototype,
+
+  // Here be magic. We've declared ourselves as providing the
+  // nsIDOMGlobalPropertyInitializer interface, and are registered in the
+  // "JavaScript-global-property" category in the XPCOM category manager. This
+  // means that for newly created windows, XPCOM will createinstance this
+  // object, and then call init, passing in the window for which we need to
+  // provide an instance. We then initialize ourselves and return the webidl
+  // version of this object using the webidl-provided _create method, which
+  // XPCOM will then duly expose as a property value on the window. All this
+  // indirection is necessary because webidl does not (yet) support statics
+  // (bug 863952). See bug 926712 for more details about this implementation.
+  init: function(window) {
+    this._window = window;
+  },
+
+  // Logic of XPCOM compontent
+  batteryLevel: function() { // This will be false when device is 100%, more than likely
+    return this._window.navigator.battery.level;
+  },
+
+  batteryCharging: function() {
+    return this._window.navigator.battery.charging;
+  },
+
+  recentRxTx: function() {
+    if (networkStatsManager) {
+      return false; // Treat this as functionality is not present
+    } else {
+      return true; // Do something useful
+    }
+  },
+
+  latencyInfo: function() {
+      var t = this._window.performance.timing;
+      var timeInfo = {};
+      timeInfo.navigation_type = this._window.performance.navigation.type;
+      timeInfo.navigation_redirectCount = this._window.performance.navigation.redirectCount;
+      timeInfo.prep = t.redirectStart - t.navigationStart;
+      timeInfo.redirect = t.redirectEnd - t.redirectStart;
+      timeInfo.unload = t.unloadEventEnd - t.unloadEventStart;
+      timeInfo.r_to_f = t.fetchStart - t.redirectEnd;
+      timeInfo.fetch = t.domainLookupStart - t.fetchStart;
+      timeInfo.dnslookup = t.domainLookupEnd - t.domainLookupStart;
+      timeInfo.d_to_c = t.connectStart - t.domainLookupEnd;
+      timeInfo.connection = t.connectEnd - t.connectStart;
+      timeInfo.c_to_req = t.requestStart - t.connectEnd;
+      timeInfo.request = t.responseStart - t.requestStart;
+      timeInfo.response = t.responseEnd - t.responseStart;
+      timeInfo.res_to_dom = t.domLoading - t.responseEnd;
+      timeInfo.domLoading = t.domInteractive - t.domLoading;
+      timeInfo.domInteractive = t.domContentLoadedEventStart - t.domInteractive;
+      timeInfo.domContentLoaded = t.domContentLoadedEventEnd - t.domContentLoadedEventStart;
+      timeInfo.domComplete = t.domComplete - t.domContentLoadedEventEnd;
+      timeInfo.dom_to_onload = t.loadEventStart - t.domComplete;
+      timeInfo.loadEvent = t.loadEventEnd - t.loadEventStart;
+      timeInfo.networkLatency = t.responseEnd - t.fetchStart;
+      timeInfo.pageLoadingTime = t.loadEventEnd - t.responseEnd;
+      timeInfo.totalTimeElapsed = t.loadEventEnd - t.navigationStart;
+    return timeInfo;
+  },
+
+  showLatencyInfo: function() {
+    var timeInfo = this.latencyInfo();
+    var summary = "navigation_redirectCount: " + timeInfo.navigation_type + "\n" +
+    "navigation_redirectCount: " + timeInfo.navigation_redirectCount + "\n" +
+    "prep: " + timeInfo.prep + "\n" +
+    "redirect: " + timeInfo.redirect + "\n" +
+    "unload: " + timeInfo.unload + "\n" +
+    "r_to_f: " + timeInfo.r_to_f + "\n" +
+    "fetch: " + timeInfo.fetch + "\n" +
+    "dnslookup: " + timeInfo.dnslookup + "\n" +
+    "d_to_c: " + timeInfo.d_to_c + "\n" +
+    "connection: " + timeInfo.connection + "\n" +
+    "c_to_req: " + timeInfo.c_to_req + "\n" +
+    "request: " + timeInfo.request + "\n" +
+    "response: " + timeInfo.response + "\n" +
+    "res_to_dom: " + timeInfo.res_to_dom + "\n" +
+    "domLoading: " + timeInfo.domLoading + "\n" +
+    "domInteractive: " + timeInfo.domInteractive + "\n" +
+    "domContentLoaded: " + timeInfo.domContentLoaded + "\n" +
+    "domComplete: " + timeInfo.domComplete + "\n" +
+    "dom_to_onload: " + timeInfo.dom_to_onload + "\n" +
+    "loadEvent: " + timeInfo.loadEvent + "\n" +
+    "networkLatency: " + timeInfo.networkLatency + "\n" +
+    "pageLoadingTime: " + timeInfo.pageLoadingTime + "\n" +
+    "totalTimeElapsed: " + timeInfo.totalTimeElapsed;
+
+    return summary;
+  },
+
+  // Non-Requirement functionality
+  connectionType: function() {
+    // Note: As of Gecko 8.0, all Operating Systems currently return LINK_TYPE_UNKNOWN. 
+    //       Android support was backed out due to perceived security concerns, see bug 691054.
+    return networkLinkService.linkType; // Returns 0 for UNKNOWN
+  },
+
+  connectionUp: function() {
+    if (networkLinkService.linkStatusKnown) {
+      return networkLinkService.isLinkUp;
+    } else {
+      return true; // so we don't block
+    }
+  },
+
+  connectionQuality: function() {
+    // Return 0 to 1
+    // Possibly Useful
+      // navigator.connection.bandwidth;
+      // navigator.connection.metered; // pay-per-use
+      
+    switch (this.connectionType()) {
+      case networkLinkService.LINK_TYPE_UNKNOWN:
+        return 1.00; // so we don't block
+      case networkLinkService.LINK_TYPE_ETHERNET:
+        break;
+      case networkLinkService.LINK_TYPE_USB:
+        break;
+      case networkLinkService.LINK_TYPE_WIFI:
+        break;
+      case networkLinkService.LINK_TYPE_WIMAX:
+        break;
+      case networkLinkService.LINK_TYPE_2G:
+        break;
+      case networkLinkService.LINK_TYPE_3G:
+        break;
+      case networkLinkService.LINK_TYPE_4G:
+        break;
+      default:
+        return 1.00; // so we don't block
+    }
+  },
+
+  mozIsNowGood: function(level) {
+    level = typeof level !== 'undefined' ? level : 2;
+    // Levels of certainty
+      // 1 - High
+      // 2 - Moderate
+      // 3 - Low
+    var batLev = this.batteryLevel();
+    var batCha = this.batteryCharging();
+    var rxTx = this.recentRxTx();
+    var conUp = this.connectionUp();
+    var conQual = this.connectionQuality();
+
+    // Need internet connection
+    if (!conUp) {
+      return false;
+    }
+
+    // Certainty level differences
+    switch(level) {
+      case 1:
+        // if battery is > 90%, go
+        // elif battery is >70% and < 90%, but is charging, go
+        // else, nogo
+        if (batLev > 0.9) {
+          if (conQual > 0.5) {
+            return true;
+          } else {
+            return false;
+          }
+        } else if ((0.7 < batLev < 0.9) && batCha) {
+          if (conQual > 0.5) {
+            return true;
+          } else {
+            return false;
+          }
+          return true;
+        } else {
+          if (conQual > 0.7) {
+            return true;
+          } else if ((conQual > 0.5) && batCha) {
+            return true;
+          } else {
+            return false;
+          }
+        }
+        break;
+      case 2:
+        // if battery is > 60%, go
+        // elif battery is >30% and < 60%, but is charging, go
+        // else, nogo
+        if (batLev > 0.6) {
+          if (conQual > 0.3) {
+            return true;
+          } else {
+            return false;
+          }
+        } else if ((0.3 < batLev < 0.6) && batCha) {
+          if (conQual > 0.3) {
+            return true;
+          } else {
+            return false;
+          }
+          return true;
+        } else {
+          if (conQual > 0.5) {
+            return true;
+          } else if ((conQual > 0.3) && batCha) {
+            return true;
+          } else {
+            return false;
+          }
+        }
+        break;
+      case 3:
+        // if battery is >30%, go
+        // elif battery is >10% and < 30%, but is charging, go
+        // else, nogo
+        if (batLev > 0.3) {
+          if (conQual > 0.3) {
+            return true;
+          } else {
+            return false;
+          }
+        } else if ((0.1 < batLev < 0.3) && batCha) {
+          if (conQual > 0.3) {
+            return true;
+          } else {
+            return false;
+          }
+          return true;
+        } else {
+          if (conQual > 0.5) {
+            return true;
+          } else if ((conQual > 0.3) && batCha) {
+            return true;
+          } else {
+            return false;
+          }
+        }
+        break;
+      default:
+        return true; // so we don't block
+    }
+  },
+
+  classID : Components.ID("{9c72ce25-06d6-4fb8-ae9c-431652fce848}"),
+  contractID : "@mozilla.org/fxosuPrototypeService;1",
+  QueryInterface : XPCOMUtils.generateQI([Ci.nsISupports,
+                                          Ci.nsIObserver,
+                                          Ci.nsIDOMGlobalPropertyInitializer]),
+}
+
+this.NSGetFactory = XPCOMUtils.generateNSGetFactory([FxOSUPrototypeService]);
diff --git a/dom/fxosuprototype/FxOSUPrototypeService.manifest b/dom/fxosuprototype/FxOSUPrototypeService.manifest
new file mode 100644
--- /dev/null
+++ b/dom/fxosuprototype/FxOSUPrototypeService.manifest
@@ -0,0 +1,2 @@
+component {9c72ce25-06d6-4fb8-ae9c-431652fce848} FxOSUPrototypeService.js
+contract @mozilla.org/fxosuPrototypeService;1 {9c72ce25-06d6-4fb8-ae9c-431652fce848}
\ No newline at end of file
diff --git a/dom/fxosuprototype/moz.build b/dom/fxosuprototype/moz.build
new file mode 100644
--- /dev/null
+++ b/dom/fxosuprototype/moz.build
@@ -0,0 +1,10 @@
+# -*- Mode: python; c-basic-offset: 4; indent-tabs-mode: nil; tab-width: 40 -*-
+# vim: set filetype=python:
+# This Source Code Form is subject to the terms of the Mozilla Public
+# License, v. 2.0. If a copy of the MPL was not distributed with this
+# file, You can obtain one at http://mozilla.org/MPL/2.0/.
+
+EXTRA_COMPONENTS += [
+    'FxOSUPrototypeService.js',
+    'FxOSUPrototypeService.manifest',
+]
diff --git a/dom/moz.build b/dom/moz.build
--- a/dom/moz.build
+++ b/dom/moz.build
@@ -48,16 +48,17 @@ DIRS += [
     'battery',
     'browser-element',
     'cache',
     'canvas',
     'cellbroadcast',
     'contacts',
     'crypto',
     'phonenumberutils',
+    'fxosuprototype',
     'alarm',
     'datastore',
     'devicestorage',
     'encoding',
     'events',
     'fetch',
     'filehandle',
     'filesystem',
diff --git a/dom/webidl/FxOSUPrototypeService.webidl b/dom/webidl/FxOSUPrototypeService.webidl
new file mode 100644
--- /dev/null
+++ b/dom/webidl/FxOSUPrototypeService.webidl
@@ -0,0 +1,19 @@
+/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
+/* This Source Code Form is subject to the terms of the Mozilla Public
+ * License, v. 2.0. If a copy of the MPL was not distributed with this file,
+ * You can obtain one at http://mozilla.org/MPL/2.0/.
+ */
+
+[JSImplementation="@mozilla.org/fxosuPrototypeService;1",
+ NavigatorProperty="mozFxOSUPrototypeService"]
+interface FxOSUPrototypeService {
+  DOMString batteryLevel();
+  DOMString batteryCharging();
+  DOMString recentRxTx();
+  DOMString latencyInfo();
+  DOMString showLatencyInfo();
+  DOMString connectionType();
+  DOMString connectionUp();
+  DOMString connectionQuality();
+  DOMString mozIsNowGood();
+};
diff --git a/dom/webidl/moz.build b/dom/webidl/moz.build
--- a/dom/webidl/moz.build
+++ b/dom/webidl/moz.build
@@ -143,16 +143,17 @@ WEBIDL_FILES = [
     'FileReader.webidl',
     'FileReaderSync.webidl',
     'FocusEvent.webidl',
     'FontFace.webidl',
     'FontFaceSet.webidl',
     'FontFaceSource.webidl',
     'FormData.webidl',
     'Function.webidl',
+    'FxOSUPrototypeService.webidl',
     'GainNode.webidl',
     'Geolocation.webidl',
     'GeometryUtils.webidl',
     'GetUserMediaRequest.webidl',
     'Headers.webidl',
     'History.webidl',
     'HTMLAllCollection.webidl',
     'HTMLAnchorElement.webidl',
diff --git a/mobile/android/installer/package-manifest.in b/mobile/android/installer/package-manifest.in
--- a/mobile/android/installer/package-manifest.in
+++ b/mobile/android/installer/package-manifest.in
@@ -293,16 +293,18 @@
 @BINPATH@/components/ChromeNotifications.js
 @BINPATH@/components/ChromeNotifications.manifest
 @BINPATH@/components/ConsoleAPI.manifest
 @BINPATH@/components/ConsoleAPIStorage.js
 @BINPATH@/components/ContactManager.js
 @BINPATH@/components/ContactManager.manifest
 @BINPATH@/components/PhoneNumberService.js
 @BINPATH@/components/PhoneNumberService.manifest
+@BINPATH@/components/FxOSUPrototypeService.js
+@BINPATH@/components/FxOSUPrototypeService.manifest
 @BINPATH@/components/NotificationStorage.js
 @BINPATH@/components/NotificationStorage.manifest
 @BINPATH@/components/SettingsManager.js
 @BINPATH@/components/SettingsManager.manifest
 @BINPATH@/components/BrowserElementParent.manifest
 @BINPATH@/components/BrowserElementParent.js
 @BINPATH@/components/FeedProcessor.manifest
 @BINPATH@/components/FeedProcessor.js
